# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: 0.0.$(Rev:r)

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  - name: buildConfiguration
    value: 'Release'

jobs:

- job: Build
  steps:

  # Azure Key Vault
  # Download Azure Key Vault secrets
  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'Azure subscription 1 (8cf7d412-05d9-4057-89eb-305fa94a6623)'
      keyVaultName: 'helpful-libraries-devops'
      secretsFilter: '*'
      runAsPreJob: false 
  
  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore'
    inputs:
      command: 'restore'
      feedsToUse: 'select'
      projects: '**/*.csproj'
  
  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'
      configuration: $(buildConfiguration)
      projects: '**/*.csproj'

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $env:PETE_AUTOMATION_AWS_SECRET_KEY="$(pete-automation-aws-secret-key)"

  - task: VSTest@2
    displayName: test
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*Test.Unit*.dll
        !**\*TestAdapter.dll
        !**\obj\**
      searchFolder: '$(System.DefaultWorkingDirectory)'
    env:
      TEST_SECRET: '$(test-secret)'

  - task: VSTest@2
    displayName: 'integration test'
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*Test.Integration*.dll
        !**\*TestAdapter.dll
        !**\obj\**
      searchFolder: '$(System.DefaultWorkingDirectory)'

      
  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
      command: 'pack'
      packagesToPack: '**/Helpful.Aws.Sqs.Receiver.csproj'
      versioningScheme: 'byBuildNumber'
      verbosityPack: 'Diagnostic'
  
  - publish: '$(Build.ArtifactStagingDirectory)'
    artifact: Helpful.Aws.Sqs.Receiver

- job: PublishLocal
  displayName: Publish to local feed
  dependsOn: Build
  condition: succeeded()
  steps:

  - download: current
    displayName: Retrieve artifact
    artifact: Helpful.Aws.Sqs.Receiver

  - task: DotNetCoreCLI@2
    displayName: 'dotnet push'
    inputs:
      command: 'push'
      packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '$(helpful-libraries-feed-allbuilds-uri)'

- job: PublishPublic
  displayName: Publish to Nuget.org
  dependsOn: Build
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  steps:

  - download: current
    displayName: Retrieve artifact
    artifact: Helpful.Aws.Sqs.Receiver

  - task: DotNetCoreCLI@2
    displayName: 'nuget push'
    enabled: false
    inputs:
      command: custom
      custom: nuget
      arguments: >
        push $(Pipeline.Workspace)/**/*.nupkg
        -s $(NugetOrgServerUrl)
        -k $(NugetOrgApiKey)
